pragma solidity 0.8.18;
contract MyToken {
    string public name;
    string public symbol;
    uint public totalSupply;
    mapping(address => uint) public balances;
    constructor(string memory _name, string memory _symbol, uint _totalSupply) {
        name = _name;
        symbol = _symbol;
        totalSupply = _totalSupply;
        balances[msg.sender] = _totalSupply;
    }
    function mint(address _receiver, uint _value) public {
        require(_value > 0, "Value must be greater than 0");
        totalSupply += _value;
        balances[_receiver] += _value;
    }
    function burn(address _from, uint _value) public {
        require(balances[_from] >= _value, "Insufficient balance");
        totalSupply -= _value;
        balances[_from] -= _value;
    }
}
